소속 : 동아대학교 지능형 시스템 실험실
이름 : 안재현(Jae Hyun An, 석사과정), 고영중(Youngjoong Ko, 교수)
메일 : anjaehyun17@gmail.com, youngjoong.ko@gmail.com
본 프로그램은 동아대학교 지능형시스템 연구실의 소중한 자산입니다. 본 프로그램을 이용한 어떠한 결과물일지라도 본 프로그램의 논문 혹은 주소가 참조되어야 합니다.
참조는 아래 논문을 참조하여 주시기를 바랍니다.

git address : https://github.com/sgnlplabeling/nlp_labeling/tree/master/donga/torch_dp_system
paper : Jaehyun An, Youngjoong Ko, "The Korean Dependency Parser for Pointer Networks based on Multi-task learning and Relation Label Distribution of Syllables", KSC2017

본 프로그램은 레이블링 과제 의존 구문 분석 프로그램에 대한 문서입니다.

최종 의존 구문 분석 성능은 UAS : 90.6, LAS : 87.46 입니다.

*** 디렉토리 설명 ***
input : 의존 구문 분석 대상 디렉토리의 default 위치입니다. 사용자가 의존 구문 분석 대상 디렉토리를 프로그램 파라미터로 지정해주지 않았을 때 자동으로 input 디렉토리의 input.txt를 구문 분석합니다.

output : 의존 구문 분석 결과 디렉토리의 위치입니다. 의존 구문 분석 결과를 output 디렉토리 안 result.txt로 생성하게 됩니다.

data_set : 학습 및 개발, 평가데이터를 모아 두는 디렉토리로 사용자가 원하는 코퍼스를 넣어 사용하시면 됩니다.

resource : 학습에 필요한 사전 파일을 모아둔 디렉토리로 p_dic_value.pkl, r_dic_value.pkl 파일이 있습니다. 각각 형태소 태그, 의존 관계명 태그를 사전 형태로 저장해둔 pickle 파일입니다.

PointerNetworks : 프로그램 실행 관련 소스 및 학습된 모델, Pickles로 구성되어있습니다.

	- BestModel.pt : 미리 학습된 모델로 구문 분석을 수행할 때 restore합니다.

	- Pickles : 데이터 처리 pickle 파일들로 구성되어 있습니다. 현재는 BestModel.pt를 학습할 때 사용했던 word2idx.pkl이 있습니다.

	- dp.py : 의존 구문 분석 실행 소스 프로그램입니다. 
                       입력해야 할 파라미터에 대한 설명은 아래와 같습니다.

                       -T : 학습 데이터의 위치를 저장하는 파라미터입니다.
                       -d : 개발 데이터의 위치를 저장하는 파라미터입니다.
                       -t : 평가 데이터의 위치를 저장하는 파라미터입니다.
                       -w : word embedding dimension을 지정하는 파라미터입니다.
                       -l : LSTM hidden layer size를 지정하는 파라미터입니다.
                       -p : pretrained word embedding pickle 파일의 위치를 지정하는 파라미터입니다.
		            반드시 사전 형태로 구성되어 있어야 하며,
			    key는 단어, value는 벡터로 구성되어 있어야 합니다.
                       -D : dropout rate를 지정하는 파라미터입니다. 
		            이 파라미터를 0을 주면 dropout을 하지 않는 것을 의미합니다.
                       -M : 학습을 수행할 것인지 구문 분석을 행할 것이지 정하는 파라미터입니다.
		            0을 주면 학습을, 1을 주면 구문 분석을 수행합니다.
                       -E : epoch의 수를 지정하는 파라미터입니다.
                       -P : 구문 분석을 수행할 대상 파일을 지정하는 파라미터입니다.

	- torch_model.py : pointer networks 전체 소스입니다.
	- utils.py : 학습 및 평가, 구문 분석을 위해 필요한 function을 모아 놓은 소스 파일입니다.


*** 실행 예시 ***

python dp.py --mode=0
-> 모든 파라미터를 default로 학습을 진행합니다.

python dp.py --mode=1
-> input 디렉토리 안의 input.txt파일에 대해 구문 분석을 수행합니다.

*** 데이터 형태 설명***
; 나 당신의 그림자를 밟으며 갑니다.
1	4	NP_SBJ	나/NP
2	3	NP_MOD	당신/NP+의/JKG
3	4	NP_OBJ	그림자/NNG+를/JKO
4	5	VP	밟/VV+으며/EC
5	0	VP	갑니/NNG+이/VCP+다/EF+./SF


첫 번째 출 : 시작 문자가 ";"이고 원본 문장을 의미합니다.
두 번째 줄 - 여섯 번째 줄 : 위치 번호\t지배소의 위치\t의존 관계명\t동아대 형태소 분석기 결과순이고, 구분자는 탭(\t)입니다.
반드시 위의 형태를 맞추어 주어야 프로그램이 정상적 실행이 가능합니다.


원하는 의존 구문 문석을 수행하기 위해선 아래와 같은 형태로 파일을 구성해야 합니다.
; 나 당신의 그림자를 밟으며 갑니다.
1	-1	NP	나/NP
2	-1	NP	당신/NP+의/JKG
3	-1	NP	그림자/NNG+를/JKO
4	-1	NP	밟/VV+으며/EC
5	-1	NP	갑니/NNG+이/VCP+다/EF+./SF

첫 번째 출 : 시작 문자가 ";"이고 원본 문장을 의미합니다.
두 번째 줄 - 여섯 번째 줄 : 구문 분석은 형태소 분석 이후의 과정이므로 형태소 분석 결과를 바탕으로 위의 형태로 구성해야 하는데 위치 번호의 경우 1부터 순서대로 올라갑니다. 지배소의 위치와 의존 관계명은 분석 결과의 값이므로 형태를 맞춰주기 위해 -1과 NP로 두시고 수행하시면 됩니다. 의존 구문 분석 모델을 수행한 이후 -1에서 지배소 위치로 바뀌고, NP에서 해당 의존 관계명으로 바뀌게 됩니다.


